--- acme/gas/config/tc-pic30.c.original	2011-01-30 13:10:17.000000000 +0100
+++ acme/gas/config/tc-pic30.c	2011-01-30 14:08:51.000000000 +0100
@@ -616,130 +616,13 @@
 
 void 
 pic30_init(int argc __attribute__ ((__unused__)), char **argv)
-{ char *f,safe;
-  char *base = 0, *last = 0;
-  char *buf;
-  unsigned int buflen=80;
-  char *PATH;
-  int proc_family = pic30_proc_family(global_PROCESSOR);
-
-  buf = xmalloc(buflen);
-  for (f = argv[0];  *f; f++) {
-    if (IS_DIR_SEPARATOR(*f)) {
-      base = f;
-    }
-  }
-  if (base == 0) {
-    /* no path information in argv[0]; try to locate pic30-as in PATH */
-    char *pseparator;
-    char *p;
-
-    PATH = getenv("PATH");
-    if (PATH == 0) {
-      PATH=".";
-    } else {
-      char *newPATH = xmalloc(strlen(PATH)+3);
-   
-      sprintf(newPATH, "%s:.", PATH);
-      PATH=newPATH;
-    }
-    p = PATH;
-    do {
-      struct stat statbuf;
-
-      for (pseparator = p; *pseparator && !IS_PATH_SEPARATOR(*pseparator); 
-           pseparator++);
-      safe = *pseparator;
-      if (*pseparator) {
-        *pseparator = 0;
-      }
- 
-      if ((strlen(p) + 2 + sizeof(EXE_SUFFIX) + sizeof("pic30-as")) >= buflen) {
-        buflen = (strlen(p) + sizeof(EXE_SUFFIX) + sizeof("pic30-as") + 20);
-        buf = xrealloc(buf, buflen);
-      }
-      sprintf(buf, "%s%cpic30-as%s", p, DIR_SEPARATOR_2, EXE_SUFFIX);
-      if (stat(buf,&statbuf) == 0) break;
-      *pseparator = safe;
-      if (safe) p = pseparator+1; else p = pseparator;
-      safe = 0;
-      if (*p == 0) break;
-    } while(1);
-    base = p;
-  } else {
-    safe = *base;
-    *base = 0;
-    f = base;
-    base = argv[0];
-  }
-  if (base) {
-    char *include_path;
-
-    for (f = base;  *f; f++) {
-      if (IS_DIR_SEPARATOR(*f)) {
-        last = f;
-      }
-    }
-    if (safe) {
-      *f = safe;
-      safe = 0;
-    };
-    if (last) {
-      safe = *last;
-      *last = 0;
-      f = last;
-    }
-    switch (proc_family)
-    {
-      case P30F:
-      case P30FSMPS:
-        include_path = strdup(MPLABC30_PIC30F_INC_PATH);
-        break;
-      case P33E:
-        include_path = strdup(MPLABC30_PIC33E_INC_PATH);
-        break;
-      case P33F:
-        include_path = strdup(MPLABC30_PIC33F_INC_PATH);
-        break;
-      case P24E:
-        include_path = strdup(MPLABC30_PIC24E_INC_PATH);
-        break;
-      case P24F:
-      case P24FK:
-        include_path = strdup(MPLABC30_PIC24F_INC_PATH);
-        break;
-      case P24H:
-        include_path = strdup(MPLABC30_PIC24H_INC_PATH);
-        break;
-      default:
-        include_path = 0;
-    }
-    if (include_path) {
-      char *c;
-      char *start = include_path;
-
-      if (strlen(base) + strlen(include_path) + 2 >= buflen) {
-        buflen = strlen(base) + strlen(include_path) + 2;
-        buf = xrealloc(buf, buflen);
-      }
-      for (c = include_path; 1; c++) {
-        if (*c == DIR_SEPARATOR_STR[0]) *c = DIR_SEPARATOR_2;
-        if (*c == PATH_SEPARATOR_STR[0]) {
-          *c = 0;
-          sprintf(buf, "%s%c%s", base, DIR_SEPARATOR_2, start);
-          add_include_dir(buf);
-          *c = ':';
-          start = ++c;
-        } else if (*c == 0) {
-          sprintf(buf, "%s%c%s", base, DIR_SEPARATOR_2, start);
-          add_include_dir(buf);
-          break;
-        }
-      }
-      free(include_path);
-    }
-    if (safe) *f = safe;
-  }
+{
+	/*
+	 * All we do here is to set up the default *.inc file
+	 * search path. There should be a switch to turn off
+	 * the default search path perhaps?
+	 */
+	add_include_dir("/usr/share/inc");
 }
 
 /******************************************************************************
