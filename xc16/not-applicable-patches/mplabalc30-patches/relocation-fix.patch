21/03/2010

Thanks to László Meskó for pointing this out.
http://old.nabble.com/dsPIC-toolchain-%28GNU-Linux%29-td23349948.html

This patch solves the 
Link Error: PC Relative branch to ‘xxx′ is out of range. Suggest large-code model.
problem on 64bit machines.

--- acme/bfd/coff-pic30.c.orig	2010-03-21 12:25:44.928735284 +1300
+++ acme/bfd/coff-pic30.c	2010-03-21 12:33:28.508994680 +1300
@@ -2161,7 +2161,7 @@ pic30_bfd_reloc_range_check (howto, relo
       case R_PIC30_PCREL_BRANCH:
       case R_PIC30_BRANCH_ABSOLUTE:
         /* valid range is [-32768..32767] and not [-2, -1, 0] */
-        if ((relocation > 0x7FFF) && ~(relocation | 0xC0007FFF))
+        if ((relocation > 0x7FFF) && ~(relocation | 0xFFFFFFFFC0007FFFull))
           {
             *error_msg = (char *) malloc(BUFSIZ);
             sprintf(*error_msg,
@@ -2174,7 +2174,7 @@ pic30_bfd_reloc_range_check (howto, relo
       case R_PIC30_PCREL_DO:
       case R_PIC30_DO_ABSOLUTE:
         /* valid range is [-32768..32767] and not [-2, -1, 0] */
-        if ((relocation > 0x7FFF) && ~(relocation | 0xC0007FFF))
+        if ((relocation > 0x7FFF) && ~(relocation | 0xFFFFFFFFC0007FFFull))
           {
             *error_msg = (char *) malloc(BUFSIZ);
             sprintf(*error_msg,
--- acme/bfd/elf32-pic30.c.orig	2010-03-21 12:25:29.801234682 +1300
+++ acme/bfd/elf32-pic30.c	2010-03-21 12:32:50.380980886 +1300
@@ -2185,7 +2185,7 @@ pic30_bfd_reloc_range_check(howto, reloc
       case R_PIC30_PCREL_BRANCH:
       case R_PIC30_BRANCH_ABSOLUTE:
         /* valid range is [-32768..32767] and not [-2, -1, 0] */
-        if ((relocation > 0x7FFF) && ~(relocation | 0xC0007FFF))
+        if ((relocation > 0x7FFF) && ~(relocation | 0xFFFFFFFFC0007FFFull))
           {
             *error_msg = (char *) malloc(BUFSIZ);
             sprintf(*error_msg,
@@ -2198,7 +2198,7 @@ pic30_bfd_reloc_range_check(howto, reloc
       case R_PIC30_PCREL_DO:
       case R_PIC30_DO_ABSOLUTE:
         /* valid range is [-32768..32767] and not [-2, -1, 0] */
-        if ((relocation > 0x7FFF) && ~(relocation | 0xC0007FFF))
+        if ((relocation > 0x7FFF) && ~(relocation | 0xFFFFFFFFC0007FFFull))
           {
             *error_msg = (char *) malloc(BUFSIZ);
             sprintf(*error_msg,
